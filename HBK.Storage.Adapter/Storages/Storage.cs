// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using HBK.Storage.Adapter.DataAnnotations;
using HBK.Storage.Adapter.Enums;
using HBK.Storage.Adapter.Interfaces;
using HBK.Storage.Adapter.StorageCredentials;
using Microsoft.EntityFrameworkCore;

#nullable disable

namespace HBK.Storage.Adapter.Storages
{
    /// <summary>
    /// 儲存個體
    /// </summary>
    public partial class Storage : ITimeStampModel, ISoftDeleteModel
    {
        /// <summary>
        /// 建構一個新的執行個體
        /// </summary>
        public Storage()
        {
            this.FileEntityStroage = new HashSet<FileEntityStorage>();
            this.FileEntityStroageOperation = new HashSet<FileEntityStroageOperation>();
        }
        /// <summary>
        /// 取得或設定儲存個體 ID
        /// </summary>
        [Key]
        [Column("StorageID")]
        public Guid StorageId { get; set; }
        /// <summary>
        /// 取得或設定儲存個體流水號
        /// </summary>
        public long StorageNo { get; set; }
        /// <summary>
        /// 取得或設定所屬的儲存個體群組 ID
        /// </summary>
        [Column("StorageGroupID")]
        public Guid? StorageGroupId { get; set; }
        /// <summary>
        /// 取得或設定名稱
        /// </summary>
        [Required]
        [StringLength(255)]
        [Sortable]
        [Filterable]
        public string Name { get; set; }
        /// <summary>
        /// 取得或設定類型
        /// </summary>
        [Sortable]
        [Filterable]
        public StorageTypeEnum Type { get; set; }
        /// <summary>
        /// 取得或設定檔案大小限制(單位 Bytes)
        /// </summary>
        [Sortable]
        public long SizeLimit { get; set; }
        /// <summary>
        /// 取得或設定存取儲存個體的驗證資訊
        /// </summary>
        [Required]
        [StringLength(4000)]
        public StorageCredentialsBase Credentials { get; set; }
        /// <summary>
        /// 取得建立時間
        /// </summary>
        [Sortable]
        public DateTimeOffset CreateDateTime { get; internal set; }
        /// <summary>
        /// 取得最後更新時間
        /// </summary>
        public DateTimeOffset? UpdateDateTime { get; internal set; }
        /// <summary>
        /// 取得刪除時間
        /// </summary>
        public DateTimeOffset? DeleteDateTime { get; internal set; }
        /// <summary>
        /// 取得或設定狀態
        /// </summary>
        public StorageStatusEnum Status { get; set; }

        /// <summary>
        /// 取得或設定對應的儲存個體群組
        /// </summary>
        [ForeignKey(nameof(StorageGroupId))]
        [InverseProperty("Storage")]
        public virtual StorageGroup StorageGroup { get; set; }
        /// <summary>
        /// 取得或設定檔案位於儲存個體上的橋接資訊集合
        /// </summary>
        [InverseProperty("Storage")]
        public virtual ICollection<FileEntityStorage> FileEntityStroage { get; set; }
        /// <summary>
        /// 取得或設定檔案位於儲存個體上的操作紀錄
        /// </summary>
        [InverseProperty("Storage")]
        public virtual ICollection<FileEntityStroageOperation> FileEntityStroageOperation { get; set; }

        DateTimeOffset? ITimeStampModel.UpdateDateTime { get => this.UpdateDateTime; set => this.UpdateDateTime = value; }
        DateTimeOffset ICreatedDateModel.CreateDateTime { get => this.CreateDateTime; set => this.CreateDateTime = value; }
        DateTimeOffset? ISoftDeleteModel.DeleteDateTime { get => this.DeleteDateTime; set => this.DeleteDateTime = value; }
    }
}