// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using HBK.Storage.Adapter.DataAnnotations;
using HBK.Storage.Adapter.Enums;
using HBK.Storage.Adapter.Interfaces;
using Microsoft.EntityFrameworkCore;

#nullable disable

namespace HBK.Storage.Adapter.Storages
{
    /// <summary>
    /// 檔案實體
    /// </summary>
    public partial class FileEntity : ITimeStampModel, ISoftDeleteModel
    {
        /// <summary>
        /// 建構一個新的執行個體
        /// </summary>
        public FileEntity()
        {
            this.FileEntityStroage = new HashSet<FileEntityStorage>();
            this.FileAccessToken = new HashSet<FileAccessToken>();
            this.IsMarkDelete = false;
        }

        /// <summary>
        /// 取得或設定檔案實體 ID
        /// </summary>
        [Key]
        [Column("FileEntityID")]
        public Guid FileEntityId { get; set; }
        /// <summary>
        /// 取得或設定檔案實體流水號
        /// </summary>
        public long FileEntityNo { get; set; }
        /// <summary>
        /// 取得或設定檔案名稱
        /// </summary>
        [Required]
        [StringLength(511)]
        [Filterable]
        [Sortable]
        public string Name { get; set; }
        /// <summary>
        /// 取得或設定檔案大小(單位 Bytes)
        /// </summary>
        [Filterable]
        [Sortable]
        public long Size { get; set; }
        /// <summary>
        /// 取得或設定檔案擴充描述
        /// </summary>
        [Filterable]
        public string ExtendProperty { get; set; }
        /// <summary>
        /// 取得或設定檔案的網際網路媒體型式
        /// </summary>
        [Required]
        [StringLength(255)]
        [Filterable]
        public string MimeType { get; set; }
        /// <summary>
        /// 取得或設定是否標記刪除
        /// </summary>
        public bool IsMarkDelete { get; set; }
        /// <summary>
        /// 取得或設定父檔案實體 ID
        /// </summary>
        [Filterable]
        public Guid? ParentFileEntityID { get; set; }
        /// <summary>
        /// 取得或設定過期時間
        /// </summary>
        public DateTimeOffset? ExpireDateTime { get; set; }
        /// <summary>
        /// 取得建立時間
        /// </summary>
        [Sortable]
        [Filterable]
        public DateTimeOffset CreateDateTime { get; internal set; }
        /// <summary>
        /// 取得最後更新時間
        /// </summary>
        public DateTimeOffset? UpdateDateTime { get; internal set; }
        /// <summary>
        /// 取得刪除時間
        /// </summary>
        public DateTimeOffset? DeleteDateTime { get; internal set; }
        /// <summary>
        /// 取得或設定狀態
        /// </summary>
        public FileEntityStatusEnum Status { get; set; }

        /// <summary>
        /// 取得或設定父檔案實體
        /// </summary>
        [ForeignKey(nameof(ParentFileEntityID))]
        public virtual FileEntity ParentFileEntity { get; set; }

        /// <summary>
        /// 取得或設定子檔案實體集合
        /// </summary>
        [InverseProperty("ParentFileEntity")]
        public virtual ICollection<FileEntity> ChildFileEntitiy { get; set; }
        /// <summary>
        /// 取得或設定檔案位於儲存個體的集合
        /// </summary>
        [InverseProperty("FileEntity")]
        public virtual ICollection<FileEntityStorage> FileEntityStroage { get; set; }
        /// <summary>
        /// 取得或設定檔案存取權杖集合
        /// </summary>
        [InverseProperty("FileEntity")]
        public virtual ICollection<FileAccessToken> FileAccessToken { get; set; }
        /// <summary>
        /// 取得或設定檔案實體標籤集合
        /// </summary>
        [InverseProperty("FileEntity")]
        public virtual ICollection<FileEntityTag> FileEntityTag { get; set; }

        DateTimeOffset? ITimeStampModel.UpdateDateTime { get => this.UpdateDateTime; set => this.UpdateDateTime = value; }
        DateTimeOffset ICreatedDateModel.CreateDateTime { get => this.CreateDateTime; set => this.CreateDateTime = value; }
        DateTimeOffset? ISoftDeleteModel.DeleteDateTime { get => this.DeleteDateTime; set => this.DeleteDateTime = value; }
    }
}