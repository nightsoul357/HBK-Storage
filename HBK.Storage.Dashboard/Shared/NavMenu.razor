@inherits HBKLayoutComponentBase

<MudDivider Class="mb-4" />
<MudNavMenu>
    <MudText Typo="Typo.subtitle2" Color="Color.Inherit" Class="ml-4 my-3">儲存服務</MudText>

    <MudMenu FullWidth="true" Label="@(this.ConvertToTitle(base.StateContainer.StorageProviderResponse))" Class="ml-4" StartIcon="@Icons.Filled.Storage" EndIcon="@Icons.Filled.KeyboardArrowDown" Color="Color.Inherit" Dense="true">
        <MudMenuItem OnClick="@(() => base.InvokeSafetyAsync(this.ShowAddStorageProviderDialogAsync))">新增儲存服務</MudMenuItem>
        @foreach (var storgaeProvider in this.StorageProviderResponses)
        {
            <MudMenuItem OnClick="@(() => base.InvokeSafety(() => this.SelectStorageProvider(storgaeProvider)))">@storgaeProvider.Name</MudMenuItem>
        }
    </MudMenu>

    @if (base.StateContainer.StorageProviderResponse != null)
    {
        <MudText Typo="Typo.subtitle2" Color="Color.Inherit" Class="ml-4 my-3">管理</MudText>
        <MudNavLink Href="/storageProvider" Match="NavLinkMatch.All" Icon="@Icons.Material.Outlined.Home">儲存服務</MudNavLink>
        <MudNavLink Href="/storageGroup" Match="NavLinkMatch.All" Icon="@Icons.Material.Outlined.Storage">儲存群組</MudNavLink>
        <MudNavLink Href="/fileEntity" Match="NavLinkMatch.All" Icon="@Icons.Material.Outlined.Folder">管理檔案</MudNavLink>
    }
    @if (base.StateContainer.GetSignInKey().Type == AuthorizeKeyType.Root)
    {
        <MudNavLink Href="/authorizeKey" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.VpnKey">管理驗證金鑰</MudNavLink>
    }
</MudNavMenu>

@code {
    string AlertAssignmentIcon { get; set; } = "<path d=\"M19,3A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3H9.18C9.6,1.84 10.7,1 12,1C13.3,1 14.4,1.84 14.82,3H19M12,3A1,1 0 0,0 11,4A1,1 0 0,0 12,5A1,1 0 0,0 13,4A1,1 0 0,0 12,3M7,7V5H5V19H19V5H17V7H7M11,9H13V13.5H11V9M11,15H13V17H11V15Z\" />";
} 